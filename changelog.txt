--------------------------------------------------------------------------------
Patch Notes
--------------------------------------------------------------------------------
Version .09.05 January/07/2020
--------------------------------------------------------------------------------
Toned back some of the latency adjustments on click functions
    I think I have gotten it tuned in properly now, and latency can adjust rest

Adjusted default OHB string to 96 variance

Changes to the parser backend, these affect the CLF
    PhysAvg, EleAvg, and ChaosAvg have been added
    ItemClass has been moved to Prop array, didnt make sense as a stat
        This will require updating CLF, Replace Stats.ItemClass with Prop.ItemClass
    dps totals have been given more standard names, will need to change in CLF
        Changed to Dps, Dps_Phys, Dps_Chaos, Dps_Ele, and Dps_Q20
        Quality 20 dps value is now always calculated, even when its already Q20
            This is to make using it as an evaluation source more reliable
    Prop.Rarity_Digit has been added to allow for > or < eval 
        1 is normal, 2 is magic, 3 is rare, 4 is unique
    <= and >= have been added as evaluator options
    & can now be used with the ~ evaluator
        so a min with this value: dagger|mace&two| word1 & word2 & word3
        would match either daggers, or mace and two, or word1 and word2 and word3
        This works very well with the zz_ItemText that now holds the entire item clip
            To search easier, the percentages and digits have been replaced with #
    width and height are now Item_Width and Item_Height

Custom Loot Filter has been reworked to load main group list as text
    Click edit to open the group and start modifying it
    This makes the CLF build the main menu MUCH faster

bugfix for the client log parser

Version .09.04 January/03/2020
--------------------------------------------------------------------------------
Found the issue with OnDetonate, GuiStatus only sampled when Auto-Mines was on

Bugfix for randomly selling maps, better method of determining if its a map

Adjustments of action delays
    ClipItem has been adjusted to make it much faster
    All the PoE-Click library has been adjusted, I left the old methods there
        if for some reason you want to use the old style, edit Old:=0 to Old:=1

Latency setting has new options to allow for smaller incriments of adjustment
    Allow for 1/10ths to give options like 1.4 latency

Added the submission of a new Aspect ratio: Cinematic(43:18)
    Thank you to ZeroneXYZ for their submission

Version .09.03 January/02/2020
--------------------------------------------------------------------------------
Additions to the Custom Loot Filter
    Added inlfuence types to item parser
        Prop.Influence ~ Elder|Shaper|Hunter|Redeemer|Warlord|Crusader
    Prop.ChaosValue and Prop.ExaltValue added to selectable list
    Prop.MapTier, Affix.GrantedSkill & Affix.GrantedSkillLevel have been added

Ninja API Parser adjusted to acount for changes to maps
    Now matches maps based on their tier
    Unique maps will not match based on tier (they are inconsistant tiering)

Debug messages have all been adjusted to take up less screen space
    Simplified the FlaskMS readout to just simple MS time and CPU load
        it will show the largest number in the last half second
    C log output has also been simplified, shows status and current location

CPU load has been reduced by removing CoolTime() from everything
    It was great for determining exact ms values down to the microsecond
    its purpose is done though, and we no longer need this

Loot Vacuum has been implimented into the main timer, no longer loops on its own
    This seems to speed up the first press of the hotkey
    also allows the rest of script to keep running while pressed

Calibration for OnDetonate has been streamlined
    The two buttons have been combined, it just determines if you are OnMines
    Same has been done to the calibration wizard
    Same in gamestates, they are just one status OnDetonate

Version .09.02 December/30/2019
--------------------------------------------------------------------------------
More adjustments towards removing extra screenshots
    Delve OHB function is now running at max potential without resampling
    Extrenuos checks were removed from the main flask logic
    same for utility firing, all calls to utility are from main game timer

Attack hotkeys have been refactored, and incuded into the main game timer
    this removes competing timers that were unnecessary

Utilities fired on cooldown have also been moved into the main game timer
    Now uses the same screenshot to check for missing buffs
        this lessens the overall processing load of the script
    This also allows me to tie those utilities to the AutoFlasks hotkey
        You can now stop them from firing by pausing AutoFlasks

Bugfix for PoE.Ninja parser crash
    API address has been updated, as well as the fields for currency data

Version .09.01 December/29/2019
--------------------------------------------------------------------------------
Bugfix for AutoDetonate function
    Fixed some incorrect variables, and in the GuiStatus
    You can now customize the delay after detonation 
        Change this in the flasks and utility tab in Auto-Mine section

Timers for the AutoSkillup function are slightly loosened
    It was too fast, was not clicking the icon properly
    Added more delays between actions and mouse movement

Magic, Rare, or Unique maps in the right 2 columns are skipped from stashing
    To change the column it begins skipping adjust the dropdown list
    change to 0 to disable, default is 11 to skip columns 11 and 12
    Find this setting in the inventory tab

More additions to the Quest items database

--------------------------------------------------------------------------------
Release Notes
--------------------------------------------------------------------------------
Version .09.00 December/26/2019
--------------------------------------------------------------------------------
-----------------------Script has been converted to RGB-------------------------
--------------------------------------------------------------------------------
---------------Update Will Require re-install and transition script-------------
--------------------------------------------------------------------------------
I have created a transition script that will take old settings.ini and update
    It asks to move all profiles into their own profiles.ini file
    It asks to swap all BGR values to RGB
    It asks if you want to delete your old Loot Colors key
        This is to allow for using the new FilterBlade pack colors

It is an easy process to check if its all working, check gamestates to confirm
If they are not registering, go to hideout and run the wizard
Once your done, save your configuration and your new samples are set!

The reason for all this adjustment, is to standardize the script for a faster method
Complete replacement of PixelGetColor with ScreenShot and ScreenShot_GetColor
    This provides a massive speed increase for all the pixel sampling
    Instead of sampling the screen multiple times, we capture once and reuse
    This also solves issues of false positives where the screen has changed

Massive speed boost for the script, cutting the overall flask MS time to 40-90ms
    We can sample as many screen positions in our status check with marginal difference
Same change has been done to the inventory scan, and its MUCH faster now
    The things slowing it down was moving the mouse and empty slots
        Screenshoting the inventory removes the need to move the mouse away each collumn
        And sampling the status of each slot has become nearly instantaneous

This new speed does come at the cost of processing power
    Old script was around .7% and this can be 4-9% load

--------------------------------------------------------------------------------
Patch Notes
--------------------------------------------------------------------------------
Version .09.00 December/26/2019
--------------------------------------------------------------------------------
Main Logic loop has been changed slightly to improve speed
    DetonateMines is no longer in a seperate loop
        Checks to determine detonation are now done in GuiStatus
        Detonation of mines is now nearly instantaneous
    Main logic loop will now always be running instead of toggled on or off
        If all relevant options are disabled it just returns at start

Loot Vacuum has been adjusted to remove the need of flipping from BGR to RGB
If you have custom colors set up for the loot vacuum, you will want to swap R and B
    I would recommend using the transition script to swap the colors
    Load the loot vacuum settings to confirm the colors are correct

All default samples have been updated for the latest patch using RGB
    It is still recommended to do calibration

Added Doors to the openable list for Loot Vacuum
    also adds an +y offset to the click so it is more accurate
    I applied this offset to all the openables

Fixed Elemental DPS parser, now gives readout of all added ele damage
    was only parsing the first elemental damage before, now parses all fields

Basic implimentation of an affix count has been introduced to the parser
    Does not account for all double affixes, but I put exceptions for unique ones
    Double basic affixes will be more difficult to determine if its an extra line

Rewrite of how implicits and corruptions are parsed
    This helps with simplifying the affix count

Added suggestion by danmarzola for Organ Parts
    Prop.IsOrgan will read the type of organ it is for further matching with CLF
    to match for specific type use ~ Heart|Lung|Brain|Liver|Eye
    Or match Prop.SpecialType = Organ

Added Stash tab option for Organs and Support Gems

Loot Vacuum now lets go of left or right mouse when its about to click
    Returns your mouse to its former state afterwards
    This lets you move or cast skills while looting

Coord tool reverted to messagebox
    Now allows for copying the Coordinates to the clipboard
    Or copy both color and coords

First load seeks to end of file if log too large

Item Parser displays Custom Loot Filter matching group and the tab it will go

Now detects for Quest items and skips them

Adjustments to the way JSON files are stored
    Saved in pretified format
    Bases.json has been updated to remove unnecessary clutter
    Ninja.json is no longer one line

Default league updated to Metamorph for Ninja Parser

Matches Vaal Skillgems properly now
    Use Prop.VaalGem with the CLF to sort them

MoveStash now optionally checks for GuiStatus("OnStash") to not interfere with screenshot

Rewrite of Hex2FindText to allow for any shape of rectangle or square

Loot Vacuum will allow for looting while holding down RButton
	It now stops LButton
	
AutoSkillup now only fires when your not holding a mouse button down

FilterBlade URL has been added to the FilterBlade.zip file
    this lets you load the filter and customize which things hide or show

Added new sample locations for OnLeft and OnDelveChart
    added these to all the supported ratios
    The allow the script to pause when
        Voltaxic generator panel, Challenges, settings etc is open
        Subterranean Chart is open

Reworked the output from GuiStatus
    It now returns true when OnChar and No panels are open

GottaGoFast updated to use new GuiStatus checks

ItemSort now temporarily disables the main logic loop
    For some reason they slowed down the inventory scan when not in town

Fixed overlapping variables related to AutoDetonate
    This was effecting the Gamestates panel using DetonateMines var
    Renamed to OnDetonate and OnDetonateDelve