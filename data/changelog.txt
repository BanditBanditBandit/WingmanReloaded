--------------------------------------------------------------------------------
Patch Notes
--------------------------------------------------------------------------------
Version .10.00 January/xx/2020
--------------------------------------------------------------------------------
Save Files for the script are now all located in "save" folder
    If you want to migrate an old versions settings, you will need to move them
    This allows for users to easily understand which files are their settings
    I also cleared the main script folder of extrenuous files, just the main script
        Files required for the script are now located in data folder

Files you will need to move into the save folder:
    Settings.ini                  -->           /save/Settings.ini
    Profiles.ini                  -->           /save/Profiles.ini
    /data/Globe.json              -->           /save/Globe.json
    /data/LootFilter.json         -->           /save/LootFilter.json
    /data/LootFilterTabs.json     -->           /save/LootFilterTabs.json
    /data/Lootfilter.ini          -->           /save/Lootfilter.ini
    /data/IgnoredSlot.json        -->           /save/IgnoredSlot.json

Game window is now bound when detected for further captures
    Logout and logic actions will happen while the game is in the background

A method of Pausing PoE-TradeMacro from parsing clipboard has been implimented
    Right click TradeMacro tray icon, > Edit Files > Custom Macros Example
    Copy the changes from the included txt file into your open editor, then save
    Essentially it adds a way for Wingman to send a message for it to pause

The script can now use predictive pricing from the PoEPrices.info API
    To enable this feature, select a pricepoint then the percentage of that price
    It defaults to 100 percent (the estimated values themselves)
    To enable using Predictive price while stashing, select the tab and tick the box
    The Item Info hotkey will now display the price and affixes influencing price
        they will appear inside the Prop list under PredictPrice and PredictPriceInfo
    It will save a copy of the results to an array
        Multiple queries to the same item will used Cached result
        Array is started fresh every script start
    
Utilities have been improved - new settings
    Can now support inversed Buff detection, will fire when buff is Found
    Can now use Mana as a triggered threshold
    Can now trigger utilities when pressing Primary or Secondary attack

Gamestates has been improved to allow for the game to be in the background
    tooltip no longer flickers because it will only update when there are changes
    OHB detection is now shown in the gamestates
    Colors of the display have been changed
        When everything shows green its all clear
        when anything is lit up red it will pause the script

Crafting tab has new option for filtering by item level
    Check the box to filter by ilvl, then set the minimum ilvl to stash

Globe scan areas are now scaled based on resolution
    it is still recommended to adjust these to ensure they work as expected

Bugfix for bulk vendor of flasks
    If the flask has been augmented it will use its actual quality value
    This is because quality 20 flasks only vendor on their own if not augmented
    This function still needs some more attention, not sure why random miscounts

Improvements to the Globe Settings GUI
    Color picker has been added, click any of the sample colors to show R G B
    Coord tool button added to the GUI
        While active it will update the color picker to the mouse cursor
    The edit boxes for colors will now ALWAYS update to the new pasted color
        it was not working when pasting in between the 5th and 6th digit
    MsgBox popups have been replaced with Notify panels
        The information is still copied to the clipboard for use

Built new classes for use with the script
    PixelStatus is a simple class for managing pixel locations on the screen
    PanelManager is a wrapper class for groups of PixelStatus
        This class is a rewrite of the GuiStatus function
    ColorPicker is a class for inserting a new Color Picker GUI into windows
        This manages a group of Progress_Slider and associated text fields / buttons
    Progress_Slider was written by HellBent on the AHK forums, modified for my use

CLF menu adjusted to space the groups better

Hoard added to openable containers

Bugfix for PoE.Ninja json data being parsed incorrectly

Bugfix for Incubator items not being able to be sorted by the CLF

Version .09.11 January/24/2020
--------------------------------------------------------------------------------
Coord tool has been given a Zoom window which gives much more control for samples
    Use the Mouse scroll wheel to zoom in or out
    Use the arrow keys to move the mouse one pixel in any direction
    Zoom window will move out of the way if you place the mouse within the area
    Selecting an area provides the average color of unique color variations
        Will display a loading bar to indicate the progress of calculation
        Press Escape to cancel during calculation
Test the new functionality by pressing the coord hotkey (Alt+O)

Color editboxes on the Globe Scanner settings menu now only accept 6 digit hex
    You can paste in the results of the coord tool to update to that color
    If the resulting hex of the editbox is not valid it will revert to last value

Adjustment to OHB, redesigned editor output
    OHB string builder menu now designed to add non matching bit at the end
        This is so that it will not match a full screen filled with that color
        It should now only match with the healthbar and nothing else
    Default Height reduced from 2 to 1
    Default Variation reduced from 4 to 1
Select the new default string from the dropdown options

Large logfile error has been given a more noticable error popup

PoE.Ninja Database has been given a loading bar when downloading

Bugfix for Weapon Swap option of the Gem Swap function

Bugfix for GUI element being shown while Show gui on startup was disabled

Added to the library:
    GDI+
    Notify
    DrawZoom
    XInput
    LoaderBar

Version .09.10 January/21/2020
--------------------------------------------------------------------------------
Bugfix for Globe scan
    ES samples were being reversed based on Eldritch Batter option
    Colors on edit menu were always displaying the Life color once Edited
    Globe scan was not updating the percentage when the color is not Found
        it now shows -1 as the percentage when there is no match

Version .09.09 January/21/2020
--------------------------------------------------------------------------------
New method of determining the Percentage of Life, ES, and Mana
    This new scan method allows for anyone to use the script while in delve
    Functions have had their behavior modified when this is enabled
    Removes the need to resample health and mana colors everytime we save
    Sample OHB menu option is now Adjust Globes
        Use this menu to adjust the search area, color and variance
        Full support for Eldritch Battery option
        These settings go into effect immediately so they can be tested
        When you finish, save to the JSON file if you want to keep your changes
            This file is also very easy to edit, if you want to adjust manually
    Health check logic slightly reworked to remove unnecessary code
        instead of 3 sections, its just life and ES, if hybrid it does both

Stash logic has been refactored and is much simpler flow
    Instead of two sections for SortFirst and !SortFirst its now all one
    Makes editing this function much easier, on surface no difference is seen

Item parser has new parsed affixes and has been adjusted
    Added IncreasedMinionDamage, PseudoTotalAddedEleAvgSpell
    Item parser has been converted to an ordered list using OrderedArray() library
        Most relevant affixes, properties and stats are at the top

Scroll and gem locations can now be assigned with a button for easier setup

Debug messages have been improved again
    Flask MS has been renamed to Logic
        Now provides a tooltip describing what is pausing the script
        When running it now displays the current Life, ES, and Mana
    C Log has been renamed to Location

Coord function has been updated to provide better information
    You can now use the tool to see color and pixel X,Y at cursor
    Press Ctrl to stop and copy the information to the clipboard
    OR click and drag to get information about the dimensions of a rectangle

I added some more information to the Monitor_Gamelogs first load
    I also reduced the size which it will begin triggering the "Log Too Large"
    Loading the client.txt file will now show a tooltip to indicate what its doing
    It will also give you how large the file is and how long it took to load

Quit threshold options have been increased to 90%
    it is now a dropdown list to conserve menu space

CI character type option has been changed to ES, to make it easier to understand
    Life is sampling only life, hybrid is both, ES is only Energy Shield

Edited the JSON library to utilize the OrderedArray Class
    This allows for files to be saved and loaded in the exact order they were created

Bugfix for Stash Routine causing the GuiStatus to mark the character !OnStash
    May have been related to ShooMouse() placing the mouse over items in the stash
    Now it puts the mouse in a random area in the center of screen

Status Overlays in bottom left finally fixed to not mess with game window!
    I figured out how to get them both Clickthrough and NoActivate properly

Crank added to list of openable Objects in loot vacuum

Version .09.08 January/15/2020
--------------------------------------------------------------------------------
IncreasedMaximumEnergyShield has been added to affixes

CLF has been adjusted to make the menu wider
    Edit menu has been adjusted as well, to make the dropdownlists fit entire text

Bugfix for the ~ evaluator, my implimentation of the & symbol was incorrect
    I reworked the way it matches, and also revised the code to be less repetative

Ignore slots menu is now alwaysontop

CLF and Ignore slots buttons moved to main menu
    added tooltips to these buttons and chat, controller
    they are related to inventory, but that menu takes ages to load

Clip Latency can now go to -2 and its been reworked
    delay before mousemove can go into negative values
    delay after mousemove will no longer go negative

Delay for wisdom scrolls reworked, gives absolute value delay
    now calculates as 15+Abs(ClickLatency*15)

Version .09.07 January/14/2020
--------------------------------------------------------------------------------
Menu has been split apart to reduce load time on first launch
    There are new submenus for Inventory, Strings, Chat, and Controller
    Open these new submenus from the Configuration tab

Fix for typo on the Wizard's Delve chart calibration

Adjustments for click actions, I know, I keep thinking its done....
    Added special delay for Map, Div and Collection tab when moving stash
    Adjusted the Ctrl and Shift click combining the old and new method
        If you have previously adjusted click latency, try out the new default 0
        There is also an option for -1 and -2 to speed up click actions
            Use at your own discretion
    Added option to adjust the clip latency alone
    Adjusted delays for Auto vendor after stash logic
    Other general Additions of base delays in inventory logic

Added function that closes any notifications when doing an inventory scan
    Sample any X button from the interface if resampling

Organized Library file, grouped all the code written for wingman together
    Mostly this is just for readability and finding functions

Version .09.06 January/10/2020
--------------------------------------------------------------------------------
Added new function for converting split RGB elements back into hex

adjustment to the Hex2FindText function, it now auto detects arrays
    in the place of the array option is now comment for building a single color

The default behavior with gems being set to lvl 20 variant has been changed
    if a gem is below lvl 20, it will not be assigned a variant
    Enable the option to force it to match ninja data for the lvl 20 version
    This is to not over evaluate gems for general use of the scripts CLF ChaosValue
    Find the setting in the Configuration tab under the Item Parse Settings

There is now two seperate latency options, that work in seperate ways
    The left option is to adjust the overall latency of the functions of the script
        Base Latency * Latency Scale
    The click latency option is to add incriments of 15ms to just click actions
        Base Latency + (Click Latency * 15)
        This option also affects the delay when clipping items

I added an editor for building OHB string
    When building a new string, ensure that the width is divisible by 2 (its even)
    When testing, watch for the highlighted matching area
    Make sure the matching area is the exact width of the inside edge of the healthbar
    Height adjustment is only for scaled resolutions, do not adjust otherwise
    Color adjustment is probably not recommended, but there in case needed

Version .09.05 January/07/2020
--------------------------------------------------------------------------------
Toned back some of the latency adjustments on click functions
    I think I have gotten it tuned in properly now, and latency can adjust rest

Adjusted default OHB string to 96 variance

Changes to the parser backend, these affect the CLF
    PhysAvg, EleAvg, and ChaosAvg have been added
    ItemClass has been moved to Prop array, didnt make sense as a stat
        This will require updating CLF, Replace Stats.ItemClass with Prop.ItemClass
    dps totals have been given more standard names, will need to change in CLF
        Changed to Dps, Dps_Phys, Dps_Chaos, Dps_Ele, and Dps_Q20
        Quality 20 dps value is now always calculated, even when its already Q20
            This is to make using it as an evaluation source more reliable
    Prop.Rarity_Digit has been added to allow for > or < eval 
        1 is normal, 2 is magic, 3 is rare, 4 is unique
    <= and >= have been added as evaluator options
    & can now be used with the ~ evaluator
        so a min with this value: dagger|mace&two| word1 & word2 & word3
        would match either daggers, or mace and two, or word1 and word2 and word3
        This works very well with the zz_ItemText that now holds the entire item clip
            To search easier, the percentages and digits have been replaced with #
    width and height are now Item_Width and Item_Height

Custom Loot Filter has been reworked to load main group list as text
    Click edit to open the group and start modifying it
    This makes the CLF build the main menu MUCH faster

bugfix for the client log parser

Version .09.04 January/03/2020
--------------------------------------------------------------------------------
Found the issue with OnDetonate, GuiStatus only sampled when Auto-Mines was on

Bugfix for randomly selling maps, better method of determining if its a map

Adjustments of action delays
    ClipItem has been adjusted to make it much faster
    All the PoE-Click library has been adjusted, I left the old methods there
        if for some reason you want to use the old style, edit Old:=0 to Old:=1

Latency setting has new options to allow for smaller incriments of adjustment
    Allow for 1/10ths to give options like 1.4 latency

Added the submission of a new Aspect ratio: Cinematic(43:18)
    Thank you to ZeroneXYZ for their submission

Version .09.03 January/02/2020
--------------------------------------------------------------------------------
Additions to the Custom Loot Filter
    Added inlfuence types to item parser
        Prop.Influence ~ Elder|Shaper|Hunter|Redeemer|Warlord|Crusader
    Prop.ChaosValue and Prop.ExaltValue added to selectable list
    Prop.MapTier, Affix.GrantedSkill & Affix.GrantedSkillLevel have been added

Ninja API Parser adjusted to acount for changes to maps
    Now matches maps based on their tier
    Unique maps will not match based on tier (they are inconsistant tiering)

Debug messages have all been adjusted to take up less screen space
    Simplified the FlaskMS readout to just simple MS time and CPU load
        it will show the largest number in the last half second
    C log output has also been simplified, shows status and current location

CPU load has been reduced by removing CoolTime() from everything
    It was great for determining exact ms values down to the microsecond
    its purpose is done though, and we no longer need this

Loot Vacuum has been implimented into the main timer, no longer loops on its own
    This seems to speed up the first press of the hotkey
    also allows the rest of script to keep running while pressed

Calibration for OnDetonate has been streamlined
    The two buttons have been combined, it just determines if you are OnMines
    Same has been done to the calibration wizard
    Same in gamestates, they are just one status OnDetonate

Version .09.02 December/30/2019
--------------------------------------------------------------------------------
More adjustments towards removing extra screenshots
    Delve OHB function is now running at max potential without resampling
    Extrenuos checks were removed from the main flask logic
    same for utility firing, all calls to utility are from main game timer

Attack hotkeys have been refactored, and incuded into the main game timer
    this removes competing timers that were unnecessary

Utilities fired on cooldown have also been moved into the main game timer
    Now uses the same screenshot to check for missing buffs
        this lessens the overall processing load of the script
    This also allows me to tie those utilities to the AutoFlasks hotkey
        You can now stop them from firing by pausing AutoFlasks

Bugfix for PoE.Ninja parser crash
    API address has been updated, as well as the fields for currency data

Version .09.01 December/29/2019
--------------------------------------------------------------------------------
Bugfix for AutoDetonate function
    Fixed some incorrect variables, and in the GuiStatus
    You can now customize the delay after detonation 
        Change this in the flasks and utility tab in Auto-Mine section

Timers for the AutoSkillup function are slightly loosened
    It was too fast, was not clicking the icon properly
    Added more delays between actions and mouse movement

Magic, Rare, or Unique maps in the right 2 columns are skipped from stashing
    To change the column it begins skipping adjust the dropdown list
    change to 0 to disable, default is 11 to skip columns 11 and 12
    Find this setting in the inventory tab

More additions to the Quest items database

--------------------------------------------------------------------------------
Release Notes
--------------------------------------------------------------------------------
Version .09.00 December/26/2019
--------------------------------------------------------------------------------
-----------------------Script has been converted to RGB-------------------------
--------------------------------------------------------------------------------
---------------Update Will Require re-install and transition script-------------
--------------------------------------------------------------------------------
I have created a transition script that will take old settings.ini and update
    It asks to move all profiles into their own profiles.ini file
    It asks to swap all BGR values to RGB
    It asks if you want to delete your old Loot Colors key
        This is to allow for using the new FilterBlade pack colors

It is an easy process to check if its all working, check gamestates to confirm
If they are not registering, go to hideout and run the wizard
Once your done, save your configuration and your new samples are set!

The reason for all this adjustment, is to standardize the script for a faster method
Complete replacement of PixelGetColor with ScreenShot and ScreenShot_GetColor
    This provides a massive speed increase for all the pixel sampling
    Instead of sampling the screen multiple times, we capture once and reuse
    This also solves issues of false positives where the screen has changed

Massive speed boost for the script, cutting the overall flask MS time to 40-90ms
    We can sample as many screen positions in our status check with marginal difference
Same change has been done to the inventory scan, and its MUCH faster now
    The things slowing it down was moving the mouse and empty slots
        Screenshoting the inventory removes the need to move the mouse away each collumn
        And sampling the status of each slot has become nearly instantaneous

This new speed does come at the cost of processing power
    Old script was around .7% and this can be 4-9% load

--------------------------------------------------------------------------------
Patch Notes
--------------------------------------------------------------------------------
Version .09.00 December/26/2019
--------------------------------------------------------------------------------
Main Logic loop has been changed slightly to improve speed
    DetonateMines is no longer in a seperate loop
        Checks to determine detonation are now done in GuiStatus
        Detonation of mines is now nearly instantaneous
    Main logic loop will now always be running instead of toggled on or off
        If all relevant options are disabled it just returns at start

Loot Vacuum has been adjusted to remove the need of flipping from BGR to RGB
If you have custom colors set up for the loot vacuum, you will want to swap R and B
    I would recommend using the transition script to swap the colors
    Load the loot vacuum settings to confirm the colors are correct

All default samples have been updated for the latest patch using RGB
    It is still recommended to do calibration

Added Doors to the openable list for Loot Vacuum
    also adds an +y offset to the click so it is more accurate
    I applied this offset to all the openables

Fixed Elemental DPS parser, now gives readout of all added ele damage
    was only parsing the first elemental damage before, now parses all fields

Basic implimentation of an affix count has been introduced to the parser
    Does not account for all double affixes, but I put exceptions for unique ones
    Double basic affixes will be more difficult to determine if its an extra line

Rewrite of how implicits and corruptions are parsed
    This helps with simplifying the affix count

Added suggestion by danmarzola for Organ Parts
    Prop.IsOrgan will read the type of organ it is for further matching with CLF
    to match for specific type use ~ Heart|Lung|Brain|Liver|Eye
    Or match Prop.SpecialType = Organ

Added Stash tab option for Organs and Support Gems

Loot Vacuum now lets go of left or right mouse when its about to click
    Returns your mouse to its former state afterwards
    This lets you move or cast skills while looting

Coord tool reverted to messagebox
    Now allows for copying the Coordinates to the clipboard
    Or copy both color and coords

First load seeks to end of file if log too large

Item Parser displays Custom Loot Filter matching group and the tab it will go

Now detects for Quest items and skips them

Adjustments to the way JSON files are stored
    Saved in pretified format
    Bases.json has been updated to remove unnecessary clutter
    Ninja.json is no longer one line

Default league updated to Metamorph for Ninja Parser

Matches Vaal Skillgems properly now
    Use Prop.VaalGem with the CLF to sort them

MoveStash now optionally checks for GuiStatus("OnStash") to not interfere with screenshot

Rewrite of Hex2FindText to allow for any shape of rectangle or square

Loot Vacuum will allow for looting while holding down RButton
	It now stops LButton
	
AutoSkillup now only fires when your not holding a mouse button down

FilterBlade URL has been added to the FilterBlade.zip file
    this lets you load the filter and customize which things hide or show

Added new sample locations for OnLeft and OnDelveChart
    added these to all the supported ratios
    The allow the script to pause when
        Voltaxic generator panel, Challenges, settings etc is open
        Subterranean Chart is open

Reworked the output from GuiStatus
    It now returns true when OnChar and No panels are open

GottaGoFast updated to use new GuiStatus checks

ItemSort now temporarily disables the main logic loop
    For some reason they slowed down the inventory scan when not in town

Fixed overlapping variables related to AutoDetonate
    This was effecting the Gamestates panel using DetonateMines var
    Renamed to OnDetonate and OnDetonateDelve